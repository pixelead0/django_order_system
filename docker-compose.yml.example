version: "3.7"

services:
  db:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  api:
    build:
      context: .
      dockerfile: ./containers/api/Dockerfile
    working_dir: /api
    entrypoint: /entrypoint.sh
    volumes:
      - ./api:/api
    ports:
      - "8080:8000"
      - "5000:5000"
    depends_on:
      - db
      - db_mysql

  frontend:
    image: node:12-alpine
    volumes:
      - ./frontend:/frontend
    working_dir: /frontend
    ports:
      - "80:8080"
      - "8002:8000"
    command: >
      sh -c "npm install
            npm run serve"
    depends_on:
      - api

  redis:
    image: redis:alpine
    expose:
      - "6379"
    restart: always

  db_mysql:
    image: mysql:8
    ports:
      - "3306:3306"
    command:
      [
        "mysqld",
        "--default-authentication-plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
      ]
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./containers/db_mysql/dump:/docker-entrypoint-initdb.d
      - ./containers/db_mysql/conf:/etc/mysql/conf.d

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - db_mysql:db
    ports:
      - 8000:80
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
